Entendi. Aqui estão algumas etapas gerais que você pode seguir para começar a desenvolver seu sistema em PHP:

1. **Banco de Dados:**
   - Crie uma tabela no banco de dados para armazenar informações dos usuários, como nome, e-mail, senha, etc.
    
    tabela usuarios (user) onde tenha as seguintes colunas com as devidas regras:
        - id primary key int auto increment
        - name text not null
        - email text not null
        - username text not null
        - password text not null
        - created datetime default now() not null
   
   - Crie outra tabela para armazenar as transações mensais, incluindo detalhes como a contribuição de cada usuário.
    
    tabela usuarios (wallet) onde tenha as seguintes colunas com as devidas regras:
        - id primary key int auto increment
        - name text not null
        - value_total float not null
        - value_deposit float not null
        - created datetime default now() not null
        - updated datetime not null
        - created_by int foreing key (user.id) not null -> criar apenas que a tabela user exista
        
    tabela contribuintes (wallets_contributer) onde tenha as seguintes colunas com as devidas regras:
        - id primary key int auto increment
        - user_id int foreing key (user.id) not null -> criar apenas que a tabela user exista
        - wallets_id int foreing key (wallets.id) not null -> criar apenas que a tabela wallets exista
   

2. **Login e Registro de Usuários:**
   - Implemente um sistema de registro de usuários, onde os usuários podem se cadastrar com um nome de usuário, e-mail e senha.
   - Desenvolva um sistema de login para autenticar os usuários.

3. **Página Principal:**
   - Crie uma página inicial onde os usuários possam ver as informações gerais do grupo.
   - Mostre o valor total guardado até o momento, o objetivo mensal, e qualquer outra informação relevante.

4. **Contribuições Mensais:**
   - Permita que os usuários registrem suas contribuições mensais.
   - Armazene essas transações na tabela do banco de dados.

5. **Cálculos:**
   - Implemente funções para calcular o valor total guardado e o progresso em relação ao objetivo.
   - Mostre essas informações de forma clara na interface do usuário.

6. **Visualização de Dados:**
   - Crie gráficos ou tabelas para visualizar as contribuições mensais, o progresso ao longo do tempo, etc.

7. **Segurança:**
   - Certifique-se de aplicar práticas de segurança, como hash de senhas e proteção contra SQL injection.

8. **Layout Responsivo:**
   - Desenvolva um layout responsivo para garantir uma boa experiência do usuário em diferentes dispositivos.

9. **Testes:**
   - Realize testes para garantir que todas as funcionalidades estejam operando corretamente.

10. **Documentação:**
    - Documente seu código para facilitar a manutenção futura e para outros desenvolvedores entenderem o funcionamento do sistema.

Lembre-se de adaptar essas diretrizes de acordo com as necessidades específicas do seu projeto e do seu grupo. Se tiver alguma dúvida mais específica durante o desenvolvimento, sinta-se à vontade para perguntar.